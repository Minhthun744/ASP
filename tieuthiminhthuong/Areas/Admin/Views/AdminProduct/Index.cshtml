@using PagedList.Mvc
@using PagedList
@model PagedList.IPagedList<tieuthiminhthuong.Context.Product>

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<style>
    /* Center align pagination buttons */
    .pager {
        display: flex;
        justify-content: center;
        margin-top: 20px;
        margin-bottom: 20px;
    }

        /* Style each pagination link */
        .pager li {
            margin: 0 5px;
            list-style: none;
        }

            /* Style for the individual page links */
            .pager li a {
                padding: 10px 15px;
                color: #007bff;
                background-color: #f8f9fa;
                border: 1px solid #ddd;
                border-radius: 5px;
                text-decoration: none;
                transition: background-color 0.3s ease, color 0.3s ease;
            }

                /* Hover and active states */
                .pager li a:hover {
                    background-color: #007bff;
                    color: white;
                }

        .pager .active a {
            background-color: #007bff;
            color: white;
            border-color: #007bff;
        }

        /* Disable styling for inactive links */
        .pager .disabled a {
            color: #ccc;
            pointer-events: none;
            background-color: #f8f9fa;
            border-color: #ddd;
        }

        /* Add an effect to the pagination links */
        .pager li a:focus {
            outline: none;
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
        }
</style>

<p>
    @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" })
</p>

@using (Html.BeginForm("Index", "AdminProduct", FormMethod.Get))
{
    <p>
        Tìm tên sản phẩm: @Html.TextBox("searchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Tìm kiếm" class="btn btn-primary" />
    </p>
}

<table class="table table-striped table-bordered table-hover">
    <thead class="thead-dark">
        <tr>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Name)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Avatar)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().CategoryId)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().ShortDes)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Price)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().PriceDiscount)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().TypeId)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().BrandId)</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.Avatar)</td>
                <td>@Html.DisplayFor(modelItem => item.CategoryId)</td>
                <td>@Html.DisplayFor(modelItem => item.ShortDes)</td>
                <td>@Html.DisplayFor(modelItem => item.Price)</td>
                <td>@Html.DisplayFor(modelItem => item.PriceDiscount)</td>
                <td>@Html.DisplayFor(modelItem => item.TypeId)</td>
                <td>@Html.DisplayFor(modelItem => item.BrandId)</td>
                <td>
                    <div class="d-flex justify-content-around">
                        <a href="@Url.Action("Edit", "AdminProduct", new { id = item.Id })" class="btn btn-warning btn-sm">
                            <i class="fas fa-edit me-2"></i>
                        </a>
                        <a href="@Url.Action("Details", "AdminProduct", new { id = item.Id })" class="btn btn-info btn-sm">
                            <i class="fas fa-eye me-2"></i>
                        </a>
                        <a href="@Url.Action("Delete", "AdminProduct", new { id = item.Id })" class="btn btn-danger btn-sm">
                            <i class="fas fa-trash-alt"></i>
                        </a>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<p>Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</p>

<div class="pager">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, currentFilter = ViewBag.CurrentFilter }))
</div>
